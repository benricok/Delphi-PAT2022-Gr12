// -----------------------------------------------------------------------------
//
//  Copyright (C) 2022  Benrico Krog
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU Affero General Public License as published
//  by the Free Software Foundation version 3 of the License.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warrany of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Affero General Public License for more details.
//
//  You should have received a copy of the GNU Affero General Public License
//  along with this program.  If not, see <https://www.gnu.org/licenses/>
//
// -----------------------------------------------------------------------------

unit DBConnection_u;

interface

uses ADODB, SysUtils, Classes, DB, VCL.Dialogs;

type
  TcDB = class(TComponent)
  private
    var
      SQL: String;
  published
    Procedure connectDB;
    procedure runSQL(sSQL: string);

  end;

var
  cDB : TcDB;
  dbConnection: TADOConnection;
  tblApplications, tblCourses, tblStaff, tblApplicants: TADOtable;
  dsrTblApplicants, dsrTblStaff, dsrTblApplications: TDataSource;
  qryMain : TADOQuery;

implementation

// Connect to database
Procedure TcDB.connectDB;
begin
  dbConnection := TADOConnection.Create(Self);

  dbConnection.ConnectionString :=
    'Provider=Microsoft.Jet.OLEDB.4.0;Data Source=./Data/eduPortal.mdb;' +
    'Mode=ReadWrite;Persist Security Info=False';

  dbConnection.LoginPrompt := false;
  dbConnection.Connected := true;

  qryMain := TADOQuery.Create(Self);
  qryMain.Connection := dbConnection;

  //Create tblApplications object and assign it to the Users tabel in the DB
  tblApplications := TADOtable.Create(Self);
  tblApplications.Connection := dbConnection;

  tblApplications.TableName := 'Applications';
  tblApplications.Active := true;

  //Create tblCourses object and assign it to the Users tabel in the DB
  tblCourses := TADOTable.Create(Self);
  tblCourses.Connection := dbConnection;

  tblCourses.TableName := 'Courses';
  tblCourses.Active := true;

  //Create tblCourses object and assign it to the Users tabel in the DB
  tblStaff := TADOTable.Create(Self);
  tblStaff.Connection := dbConnection;

  tblStaff.TableName := 'Staff';
  tblStaff.Active := true;

  //Create tblCourses object and assign it to the Users tabel in the DB
  tblApplicants := TADOTable.Create(Self);
  tblApplicants.Connection := dbConnection;

  tblApplicants.TableName := 'Applicants';
  tblApplicants.Active := true;

  // Create datasource object
  dsrTblApplicants := TDataSource.Create(Self);
  dsrTblApplicants.DataSet := tblApplicants;

  dsrTblStaff := TDataSource.Create(Self);
  dsrTblStaff.DataSet := tblStaff;

  dsrTblApplications := TDataSource.Create(Self);
  dsrTblApplications.DataSet := tblApplications;
end;

procedure TcDB.runSQL(sSQL: string);
begin
  if length(sSQL) <> 0 then
  begin
    qryMain.Close;
    qryMain.SQL.Text := sSQL;
    qryMain.Open;
  end
  else
    Showmessage('No SQL statement entered');
end;

end.
